# MySQL Properties
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/quartz-data?useSSL=false
spring.datasource.username=root
spring.datasource.password=mysql-quartz

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate ddl auto (create, create-drop, validate, update, none)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Quartz Properties
spring.quartz.job-store-type=jdbc
spring.quartz.properties.org.quartz.threadPool.threadCount=5
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate


# Create Quartz tables
# --------------------
# First way: Specify directly the url of the schema.sql to be executed at startup
#spring.quartz.jdbc.schema=classpath:quartz/schema.sql

# Second way: Use Liquibase
# Liquibase Properties
spring.liquibase.change-log=classpath:db/changeLog/changeLog-master.xml

# Mail Properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# You have to change when pushing
spring.mail.username=
#spring.mail.username=<Put_Your_Email_Address>
spring.mail.password=

# To active "Less secure app access" ==> https://myaccount.google.com/security
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

